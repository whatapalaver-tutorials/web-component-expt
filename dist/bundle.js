/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime-module.js\");\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/regenerator/index.js?");

/***/ }),

/***/ "./node_modules/lit-element/lib/css-tag.js":
/*!*************************************************!*\
  !*** ./node_modules/lit-element/lib/css-tag.js ***!
  \*************************************************/
/*! exports provided: supportsAdoptingStyleSheets, CSSResult, unsafeCSS, css */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supportsAdoptingStyleSheets\", function() { return supportsAdoptingStyleSheets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSResult\", function() { return CSSResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unsafeCSS\", function() { return unsafeCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nvar supportsAdoptingStyleSheets = 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\nvar constructionToken = Symbol();\nvar CSSResult =\n/*#__PURE__*/\nfunction () {\n  function CSSResult(cssText, safeToken) {\n    _classCallCheck(this, CSSResult);\n\n    if (safeToken !== constructionToken) {\n      throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  } // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n\n\n  _createClass(CSSResult, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.cssText;\n    }\n  }, {\n    key: \"styleSheet\",\n    get: function get() {\n      if (this._styleSheet === undefined) {\n        // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n        // is constructable.\n        if (supportsAdoptingStyleSheets) {\n          this._styleSheet = new CSSStyleSheet();\n\n          this._styleSheet.replaceSync(this.cssText);\n        } else {\n          this._styleSheet = null;\n        }\n      }\n\n      return this._styleSheet;\n    }\n  }]);\n\n  return CSSResult;\n}();\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\n\nvar unsafeCSS = function unsafeCSS(value) {\n  return new CSSResult(String(value), constructionToken);\n};\n\nvar textFromCSSResult = function textFromCSSResult(value) {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else {\n    throw new Error(\"Value passed to 'css' function must be a 'css' function result: \".concat(value, \". Use 'unsafeCSS' to pass non-literal values, but\\n            take care to ensure page security.\"));\n  }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\n\n\nvar css = function css(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  var cssText = values.reduce(function (acc, v, idx) {\n    return acc + textFromCSSResult(v) + strings[idx + 1];\n  }, strings[0]);\n  return new CSSResult(cssText, constructionToken);\n};\n\n//# sourceURL=webpack:///./node_modules/lit-element/lib/css-tag.js?");

/***/ }),

/***/ "./node_modules/lit-element/lib/decorators.js":
/*!****************************************************!*\
  !*** ./node_modules/lit-element/lib/decorators.js ***!
  \****************************************************/
/*! exports provided: customElement, property, query, queryAll, eventOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"customElement\", function() { return customElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return query; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return queryAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"eventOptions\", function() { return eventOptions; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar legacyCustomElement = function legacyCustomElement(tagName, clazz) {\n  window.customElements.define(tagName, clazz); // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // tslint:disable-next-line:no-any\n\n  return clazz;\n};\n\nvar standardCustomElement = function standardCustomElement(tagName, descriptor) {\n  var kind = descriptor.kind,\n      elements = descriptor.elements;\n  return {\n    kind: kind,\n    elements: elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher: function finisher(clazz) {\n      window.customElements.define(tagName, clazz);\n    }\n  };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\n\n\nvar customElement = function customElement(tagName) {\n  return function (classOrDescriptor) {\n    return typeof classOrDescriptor === 'function' ? legacyCustomElement(tagName, classOrDescriptor) : standardCustomElement(tagName, classOrDescriptor);\n  };\n};\n\nvar standardProperty = function standardProperty(options, element) {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (element.kind === 'method' && element.descriptor && !('value' in element.descriptor)) {\n    return Object.assign({}, element, {\n      finisher: function finisher(clazz) {\n        clazz.createProperty(element.key, options);\n      }\n    });\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      // tslint:disable-next-line:no-any decorator\n      initializer: function initializer() {\n        if (typeof element.initializer === 'function') {\n          this[element.key] = element.initializer.call(this);\n        }\n      },\n      finisher: function finisher(clazz) {\n        clazz.createProperty(element.key, options);\n      }\n    };\n  }\n};\n\nvar legacyProperty = function legacyProperty(options, proto, name) {\n  proto.constructor.createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\n\n\nfunction property(options) {\n  // tslint:disable-next-line:no-any decorator\n  return function (protoOrDescriptor, name) {\n    return name !== undefined ? legacyProperty(options, protoOrDescriptor, name) : standardProperty(options, protoOrDescriptor);\n  };\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\n\nfunction query(selector) {\n  return function (protoOrDescriptor, // tslint:disable-next-line:no-any decorator\n  name) {\n    var descriptor = {\n      get: function get() {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true\n    };\n    return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);\n  };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\n\nfunction queryAll(selector) {\n  return function (protoOrDescriptor, // tslint:disable-next-line:no-any decorator\n  name) {\n    var descriptor = {\n      get: function get() {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true\n    };\n    return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);\n  };\n}\n\nvar legacyQuery = function legacyQuery(descriptor, proto, name) {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nvar standardQuery = function standardQuery(descriptor, element) {\n  return {\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor: descriptor\n  };\n};\n\nvar standardEventOptions = function standardEventOptions(options, element) {\n  return Object.assign({}, element, {\n    finisher: function finisher(clazz) {\n      Object.assign(clazz.prototype[element.key], options);\n    }\n  });\n};\n\nvar legacyEventOptions = // tslint:disable-next-line:no-any legacy decorator\nfunction legacyEventOptions(options, proto, name) {\n  Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\n\n\nvar eventOptions = function eventOptions(options) {\n  return (// Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    function (protoOrDescriptor, name) {\n      return name !== undefined ? legacyEventOptions(options, protoOrDescriptor, name) : standardEventOptions(options, protoOrDescriptor);\n    }\n  );\n};\n\n//# sourceURL=webpack:///./node_modules/lit-element/lib/decorators.js?");

/***/ }),

/***/ "./node_modules/lit-element/lib/updating-element.js":
/*!**********************************************************!*\
  !*** ./node_modules/lit-element/lib/updating-element.js ***!
  \**********************************************************/
/*! exports provided: defaultConverter, notEqual, UpdatingElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultConverter\", function() { return defaultConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notEqual\", function() { return notEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpdatingElement\", function() { return UpdatingElement; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty = function (prop, _obj) {\n  return prop;\n};\n\nvar defaultConverter = {\n  toAttribute: function toAttribute(value, type) {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n\n    return value;\n  },\n  fromAttribute: function fromAttribute(value, type) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n\n      case Number:\n        return value === null ? null : Number(value);\n\n      case Object:\n      case Array:\n        return JSON.parse(value);\n    }\n\n    return value;\n  }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\n\nvar notEqual = function notEqual(value, old) {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\nvar defaultPropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\nvar microtaskPromise = Promise.resolve(true);\nvar STATE_HAS_UPDATED = 1;\nvar STATE_UPDATE_REQUESTED = 1 << 2;\nvar STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nvar STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nvar STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\n\nvar UpdatingElement =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(UpdatingElement, _HTMLElement);\n\n  function UpdatingElement() {\n    var _this;\n\n    _classCallCheck(this, UpdatingElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdatingElement).call(this));\n    _this._updateState = 0;\n    _this._instanceProperties = undefined;\n    _this._updatePromise = microtaskPromise;\n    _this._hasConnectedResolver = undefined;\n    /**\n     * Map with keys for any properties that have changed since the last\n     * update cycle with previous values.\n     */\n\n    _this._changedProperties = new Map();\n    /**\n     * Map with keys of properties that should be reflected when updated.\n     */\n\n    _this._reflectingProperties = undefined;\n\n    _this.initialize();\n\n    return _this;\n  }\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n\n\n  _createClass(UpdatingElement, [{\n    key: \"initialize\",\n\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    value: function initialize() {\n      this._saveInstanceProperties(); // ensures first update will be caught by an early access of `updateComplete`\n\n\n      this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n\n  }, {\n    key: \"_saveInstanceProperties\",\n    value: function _saveInstanceProperties() {\n      var _this2 = this;\n\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      this.constructor._classProperties.forEach(function (_v, p) {\n        if (_this2.hasOwnProperty(p)) {\n          var value = _this2[p];\n          delete _this2[p];\n\n          if (!_this2._instanceProperties) {\n            _this2._instanceProperties = new Map();\n          }\n\n          _this2._instanceProperties.set(p, value);\n        }\n      });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n\n  }, {\n    key: \"_applyInstanceProperties\",\n    value: function _applyInstanceProperties() {\n      var _this3 = this;\n\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // tslint:disable-next-line:no-any\n      this._instanceProperties.forEach(function (v, p) {\n        return _this3[p] = v;\n      });\n\n      this._instanceProperties = undefined;\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this._updateState = this._updateState | STATE_HAS_CONNECTED; // Ensure first connection completes an update. Updates cannot complete before\n      // connection and if one is pending connection the `_hasConnectionResolver`\n      // will exist. If so, resolve it to complete the update, otherwise\n      // requestUpdate.\n\n      if (this._hasConnectedResolver) {\n        this._hasConnectedResolver();\n\n        this._hasConnectedResolver = undefined;\n      }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {}\n    /**\n     * Synchronizes property values when attributes change.\n     */\n\n  }, {\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n    }\n  }, {\n    key: \"_propertyToAttribute\",\n    value: function _propertyToAttribute(name, value) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultPropertyDeclaration;\n      var ctor = this.constructor;\n\n      var attr = ctor._attributeNameForProperty(name, options);\n\n      if (attr !== undefined) {\n        var attrValue = ctor._propertyValueToAttribute(value, options); // an undefined value does not change the attribute.\n\n\n        if (attrValue === undefined) {\n          return;\n        } // Track if the property is being reflected to avoid\n        // setting the property again via `attributeChangedCallback`. Note:\n        // 1. this takes advantage of the fact that the callback is synchronous.\n        // 2. will behave incorrectly if multiple attributes are in the reaction\n        // stack at time of calling. However, since we process attributes\n        // in `update` this should not be possible (or an extreme corner case\n        // that we'd like to discover).\n        // mark state reflecting\n\n\n        this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n\n        if (attrValue == null) {\n          this.removeAttribute(attr);\n        } else {\n          this.setAttribute(attr, attrValue);\n        } // mark state not reflecting\n\n\n        this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      }\n    }\n  }, {\n    key: \"_attributeToProperty\",\n    value: function _attributeToProperty(name, value) {\n      // Use tracking info to avoid deserializing attribute value if it was\n      // just set from a property setter.\n      if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n        return;\n      }\n\n      var ctor = this.constructor;\n\n      var propName = ctor._attributeToPropertyMap.get(name);\n\n      if (propName !== undefined) {\n        var options = ctor._classProperties.get(propName) || defaultPropertyDeclaration; // mark state reflecting\n\n        this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n        this[propName] = // tslint:disable-next-line:no-any\n        ctor._propertyValueFromAttribute(value, options); // mark state not reflecting\n\n        this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n      }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n\n  }, {\n    key: \"_requestUpdate\",\n    value: function _requestUpdate(name, oldValue) {\n      var shouldRequestUpdate = true; // If we have a property key, perform property update steps.\n\n      if (name !== undefined) {\n        var ctor = this.constructor;\n        var options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n\n        if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n          if (!this._changedProperties.has(name)) {\n            this._changedProperties.set(name, oldValue);\n          } // Add to reflecting properties set.\n          // Note, it's important that every change has a chance to add the\n          // property to `_reflectingProperties`. This ensures setting\n          // attribute + property reflects correctly.\n\n\n          if (options.reflect === true && !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n            if (this._reflectingProperties === undefined) {\n              this._reflectingProperties = new Map();\n            }\n\n            this._reflectingProperties.set(name, options);\n          }\n        } else {\n          // Abort the request if the property should not be considered changed.\n          shouldRequestUpdate = false;\n        }\n      }\n\n      if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n        this._enqueueUpdate();\n      }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n\n  }, {\n    key: \"requestUpdate\",\n    value: function requestUpdate(name, oldValue) {\n      this._requestUpdate(name, oldValue);\n\n      return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n\n  }, {\n    key: \"_enqueueUpdate\",\n    value: function () {\n      var _enqueueUpdate2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n        var _this4 = this;\n\n        var resolve, reject, previousUpdatePromise, result;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Mark state updating...\n                this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n                previousUpdatePromise = this._updatePromise;\n                this._updatePromise = new Promise(function (res, rej) {\n                  resolve = res;\n                  reject = rej;\n                });\n                _context.prev = 3;\n                _context.next = 6;\n                return previousUpdatePromise;\n\n              case 6:\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n\n              case 10:\n                if (this._hasConnected) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 13;\n                return new Promise(function (res) {\n                  return _this4._hasConnectedResolver = res;\n                });\n\n              case 13:\n                _context.prev = 13;\n                result = this.performUpdate(); // If `performUpdate` returns a Promise, we await it. This is done to\n                // enable coordinating updates with a scheduler. Note, the result is\n                // checked to avoid delaying an additional microtask unless we need to.\n\n                if (!(result != null)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 18;\n                return result;\n\n              case 18:\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t1 = _context[\"catch\"](13);\n                reject(_context.t1);\n\n              case 23:\n                resolve(!this._hasRequestedUpdate);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 8], [13, 20]]);\n      }));\n\n      function _enqueueUpdate() {\n        return _enqueueUpdate2.apply(this, arguments);\n      }\n\n      return _enqueueUpdate;\n    }()\n  }, {\n    key: \"performUpdate\",\n\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    value: function performUpdate() {\n      // Mixin instance properties once, if they exist.\n      if (this._instanceProperties) {\n        this._applyInstanceProperties();\n      }\n\n      var shouldUpdate = false;\n      var changedProperties = this._changedProperties;\n\n      try {\n        shouldUpdate = this.shouldUpdate(changedProperties);\n\n        if (shouldUpdate) {\n          this.update(changedProperties);\n        }\n      } catch (e) {\n        // Prevent `firstUpdated` and `updated` from running when there's an\n        // update exception.\n        shouldUpdate = false;\n        throw e;\n      } finally {\n        // Ensure element can accept additional updates after an exception.\n        this._markUpdated();\n      }\n\n      if (shouldUpdate) {\n        if (!(this._updateState & STATE_HAS_UPDATED)) {\n          this._updateState = this._updateState | STATE_HAS_UPDATED;\n          this.firstUpdated(changedProperties);\n        }\n\n        this.updated(changedProperties);\n      }\n    }\n  }, {\n    key: \"_markUpdated\",\n    value: function _markUpdated() {\n      this._changedProperties = new Map();\n      this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n\n  }, {\n    key: \"shouldUpdate\",\n\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    value: function shouldUpdate(_changedProperties) {\n      return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(_changedProperties) {\n      var _this5 = this;\n\n      if (this._reflectingProperties !== undefined && this._reflectingProperties.size > 0) {\n        // Use forEach so this works even if for/of loops are compiled to for\n        // loops expecting arrays\n        this._reflectingProperties.forEach(function (v, k) {\n          return _this5._propertyToAttribute(k, _this5[k], v);\n        });\n\n        this._reflectingProperties = undefined;\n      }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n\n  }, {\n    key: \"updated\",\n    value: function updated(_changedProperties) {}\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n\n  }, {\n    key: \"firstUpdated\",\n    value: function firstUpdated(_changedProperties) {}\n  }, {\n    key: \"_hasConnected\",\n    get: function get() {\n      return this._updateState & STATE_HAS_CONNECTED;\n    }\n  }, {\n    key: \"_hasRequestedUpdate\",\n    get: function get() {\n      return this._updateState & STATE_UPDATE_REQUESTED;\n    }\n  }, {\n    key: \"hasUpdated\",\n    get: function get() {\n      return this._updateState & STATE_HAS_UPDATED;\n    }\n  }, {\n    key: \"updateComplete\",\n    get: function get() {\n      return this._updatePromise;\n    }\n  }], [{\n    key: \"_ensureClassProperties\",\n\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n\n    /** @nocollapse */\n    value: function _ensureClassProperties() {\n      var _this6 = this;\n\n      // ensure private storage for property declarations.\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n        this._classProperties = new Map(); // NOTE: Workaround IE11 not supporting Map constructor argument.\n\n        var superProperties = Object.getPrototypeOf(this)._classProperties;\n\n        if (superProperties !== undefined) {\n          superProperties.forEach(function (v, k) {\n            return _this6._classProperties.set(k, v);\n          });\n        }\n      }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n\n  }, {\n    key: \"createProperty\",\n    value: function createProperty(name) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultPropertyDeclaration;\n\n      // Note, since this can be called by the `@property` decorator which\n      // is called before `finalize`, we ensure storage exists for property\n      // metadata.\n      this._ensureClassProperties();\n\n      this._classProperties.set(name, options); // Do not generate an accessor if the prototype already has one, since\n      // it would be lost otherwise and that would never be the user's intention;\n      // Instead, we expect users to call `requestUpdate` themselves from\n      // user-defined accessors. Note that if the super has an accessor we will\n      // still overwrite it\n\n\n      if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n        return;\n      }\n\n      var key = _typeof(name) === 'symbol' ? Symbol() : \"__\".concat(name);\n      Object.defineProperty(this.prototype, name, {\n        // tslint:disable-next-line:no-any no symbol in index\n        get: function get() {\n          return this[key];\n        },\n        set: function set(value) {\n          // tslint:disable-next-line:no-any no symbol in index\n          var oldValue = this[name]; // tslint:disable-next-line:no-any no symbol in index\n\n          this[key] = value;\n\n          this._requestUpdate(name, oldValue);\n        },\n        configurable: true,\n        enumerable: true\n      });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) && this.finalized) {\n        return;\n      } // finalize any superclasses\n\n\n      var superCtor = Object.getPrototypeOf(this);\n\n      if (typeof superCtor.finalize === 'function') {\n        superCtor.finalize();\n      }\n\n      this.finalized = true;\n\n      this._ensureClassProperties(); // initialize Map populated in observedAttributes\n\n\n      this._attributeToPropertyMap = new Map(); // make any properties\n      // Note, only process \"own\" properties since this element will inherit\n      // any properties defined on the superClass, and finalization ensures\n      // the entire prototype chain is finalized.\n\n      if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n        var props = this.properties; // support symbols in properties (IE11 does not support this)\n\n        var propKeys = [].concat(_toConsumableArray(Object.getOwnPropertyNames(props)), _toConsumableArray(typeof Object.getOwnPropertySymbols === 'function' ? Object.getOwnPropertySymbols(props) : [])); // This for/of is ok because propKeys is an array\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = propKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var p = _step.value;\n            // note, use of `any` is due to TypeSript lack of support for symbol in\n            // index types\n            // tslint:disable-next-line:no-any no symbol in index\n            this.createProperty(p, props[p]);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n\n  }, {\n    key: \"_attributeNameForProperty\",\n    value: function _attributeNameForProperty(name, options) {\n      var attribute = options.attribute;\n      return attribute === false ? undefined : typeof attribute === 'string' ? attribute : typeof name === 'string' ? name.toLowerCase() : undefined;\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n\n  }, {\n    key: \"_valueHasChanged\",\n    value: function _valueHasChanged(value, old) {\n      var hasChanged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : notEqual;\n      return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n\n  }, {\n    key: \"_propertyValueFromAttribute\",\n    value: function _propertyValueFromAttribute(value, options) {\n      var type = options.type;\n      var converter = options.converter || defaultConverter;\n      var fromAttribute = typeof converter === 'function' ? converter : converter.fromAttribute;\n      return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n\n  }, {\n    key: \"_propertyValueToAttribute\",\n    value: function _propertyValueToAttribute(value, options) {\n      if (options.reflect === undefined) {\n        return;\n      }\n\n      var type = options.type;\n      var converter = options.converter;\n      var toAttribute = converter && converter.toAttribute || defaultConverter.toAttribute;\n      return toAttribute(value, type);\n    }\n  }, {\n    key: \"observedAttributes\",\n    get: function get() {\n      var _this7 = this;\n\n      // note: piggy backing on this to ensure we're finalized.\n      this.finalize();\n      var attributes = []; // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n\n      this._classProperties.forEach(function (v, p) {\n        var attr = _this7._attributeNameForProperty(p, v);\n\n        if (attr !== undefined) {\n          _this7._attributeToPropertyMap.set(attr, p);\n\n          attributes.push(attr);\n        }\n      });\n\n      return attributes;\n    }\n  }]);\n\n  return UpdatingElement;\n}(_wrapNativeSuper(HTMLElement));\n/**\n * Marks class as having finished creating properties.\n */\n\nUpdatingElement.finalized = true;\n\n//# sourceURL=webpack:///./node_modules/lit-element/lib/updating-element.js?");

/***/ }),

/***/ "./node_modules/lit-element/lit-element.js":
/*!*************************************************!*\
  !*** ./node_modules/lit-element/lit-element.js ***!
  \*************************************************/
/*! exports provided: html, svg, TemplateResult, SVGTemplateResult, LitElement, defaultConverter, notEqual, UpdatingElement, customElement, property, query, queryAll, eventOptions, supportsAdoptingStyleSheets, CSSResult, unsafeCSS, css */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LitElement\", function() { return LitElement; });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var lit_html_lib_shady_render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/lib/shady-render.js */ \"./node_modules/lit-html/lib/shady-render.js\");\n/* harmony import */ var _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/updating-element.js */ \"./node_modules/lit-element/lib/updating-element.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultConverter\", function() { return _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_2__[\"defaultConverter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notEqual\", function() { return _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_2__[\"notEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UpdatingElement\", function() { return _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_2__[\"UpdatingElement\"]; });\n\n/* harmony import */ var _lib_decorators_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/decorators.js */ \"./node_modules/lit-element/lib/decorators.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"customElement\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_3__[\"customElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_3__[\"property\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_3__[\"query\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_3__[\"queryAll\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"eventOptions\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_3__[\"eventOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return lit_html__WEBPACK_IMPORTED_MODULE_0__[\"html\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return lit_html__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return lit_html__WEBPACK_IMPORTED_MODULE_0__[\"TemplateResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SVGTemplateResult\", function() { return lit_html__WEBPACK_IMPORTED_MODULE_0__[\"SVGTemplateResult\"]; });\n\n/* harmony import */ var _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/css-tag.js */ \"./node_modules/lit-element/lib/css-tag.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"supportsAdoptingStyleSheets\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"supportsAdoptingStyleSheets\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CSSResult\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unsafeCSS\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"unsafeCSS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"css\"]; });\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\n\n // IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n\n(window['litElementVersions'] || (window['litElementVersions'] = [])).push('2.0.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\n\nfunction arrayFlat(styles) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  for (var i = 0, length = styles.length; i < length; i++) {\n    var value = styles[i];\n\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n\n  return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\n\n\nvar flattenStyles = function flattenStyles(styles) {\n  return styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n};\n\nvar LitElement =\n/*#__PURE__*/\nfunction (_UpdatingElement) {\n  _inherits(LitElement, _UpdatingElement);\n\n  function LitElement() {\n    _classCallCheck(this, LitElement);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LitElement).apply(this, arguments));\n  }\n\n  _createClass(LitElement, [{\n    key: \"initialize\",\n\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    value: function initialize() {\n      _get(_getPrototypeOf(LitElement.prototype), \"initialize\", this).call(this);\n\n      this.renderRoot = this.createRenderRoot(); // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n      // element's getRootNode(). While this could be done, we're choosing not to\n      // support this now since it would require different logic around de-duping.\n\n      if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n        this.adoptStyles();\n      }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n\n  }, {\n    key: \"createRenderRoot\",\n    value: function createRenderRoot() {\n      return this.attachShadow({\n        mode: 'open'\n      });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n\n  }, {\n    key: \"adoptStyles\",\n    value: function adoptStyles() {\n      var styles = this.constructor._styles;\n\n      if (styles.length === 0) {\n        return;\n      } // There are three separate cases here based on Shadow DOM support.\n      // (1) shadowRoot polyfilled: use ShadyCSS\n      // (2) shadowRoot.adoptedStyleSheets available: use it.\n      // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n      // rendering\n\n\n      if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n        window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map(function (s) {\n          return s.cssText;\n        }), this.localName);\n      } else if (_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"supportsAdoptingStyleSheets\"]) {\n        this.renderRoot.adoptedStyleSheets = styles.map(function (s) {\n          return s.styleSheet;\n        });\n      } else {\n        // This must be done after rendering so the actual style insertion is done\n        // in `update`.\n        this._needsShimAdoptedStyleSheets = true;\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(LitElement.prototype), \"connectedCallback\", this).call(this); // Note, first update/render handles styleElement so we only call this if\n      // connected after first update.\n\n\n      if (this.hasUpdated && window.ShadyCSS !== undefined) {\n        window.ShadyCSS.styleElement(this);\n      }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(changedProperties) {\n      var _this = this;\n\n      _get(_getPrototypeOf(LitElement.prototype), \"update\", this).call(this, changedProperties);\n\n      var templateResult = this.render();\n\n      if (templateResult instanceof lit_html__WEBPACK_IMPORTED_MODULE_0__[\"TemplateResult\"]) {\n        this.constructor.render(templateResult, this.renderRoot, {\n          scopeName: this.localName,\n          eventContext: this\n        });\n      } // When native Shadow DOM is used but adoptedStyles are not supported,\n      // insert styling after rendering to ensure adoptedStyles have highest\n      // priority.\n\n\n      if (this._needsShimAdoptedStyleSheets) {\n        this._needsShimAdoptedStyleSheets = false;\n\n        this.constructor._styles.forEach(function (s) {\n          var style = document.createElement('style');\n          style.textContent = s.cssText;\n\n          _this.renderRoot.appendChild(style);\n        });\n      }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {}\n  }], [{\n    key: \"finalize\",\n\n    /** @nocollapse */\n    value: function finalize() {\n      _get(_getPrototypeOf(LitElement), \"finalize\", this).call(this); // Prepare styling that is stamped at first render time. Styling\n      // is built from user provided `styles` or is inherited from the superclass.\n\n\n      this._styles = this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ? this._getUniqueStyles() : this._styles || [];\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"_getUniqueStyles\",\n    value: function _getUniqueStyles() {\n      // Take care not to call `this.styles` multiple times since this generates\n      // new CSSResults each time.\n      // TODO(sorvell): Since we do not cache CSSResults by input, any\n      // shared styles will generate new stylesheet objects, which is wasteful.\n      // This should be addressed when a browser ships constructable\n      // stylesheets.\n      var userStyles = this.styles;\n      var styles = [];\n\n      if (Array.isArray(userStyles)) {\n        var flatStyles = flattenStyles(userStyles); // As a performance optimization to avoid duplicated styling that can\n        // occur especially when composing via subclassing, de-duplicate styles\n        // preserving the last item in the list. The last item is kept to\n        // try to preserve cascade order with the assumption that it's most\n        // important that last added styles override previous styles.\n\n        var styleSet = flatStyles.reduceRight(function (set, s) {\n          set.add(s); // on IE set.add does not return the set.\n\n          return set;\n        }, new Set()); // Array.from does not work on Set in IE\n\n        styleSet.forEach(function (v) {\n          return styles.unshift(v);\n        });\n      } else if (userStyles) {\n        styles.push(userStyles);\n      }\n\n      return styles;\n    }\n  }]);\n\n  return LitElement;\n}(_lib_updating_element_js__WEBPACK_IMPORTED_MODULE_2__[\"UpdatingElement\"]);\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\n\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\n\nLitElement.render = lit_html_lib_shady_render_js__WEBPACK_IMPORTED_MODULE_1__[\"render\"];\n\n//# sourceURL=webpack:///./node_modules/lit-element/lit-element.js?");

/***/ }),

/***/ "./node_modules/lit-html/directives/repeat.js":
/*!****************************************************!*\
  !*** ./node_modules/lit-html/directives/repeat.js ***!
  \****************************************************/
/*! exports provided: repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeat\", function() { return repeat; });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ \"./node_modules/lit-html/lit-html.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n // Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\n\nvar createAndInsertPart = function createAndInsertPart(containerPart, beforePart) {\n  var container = containerPart.startNode.parentNode;\n  var beforeNode = beforePart === undefined ? containerPart.endNode : beforePart.startNode;\n  var startNode = container.insertBefore(Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"createMarker\"])(), beforeNode);\n  container.insertBefore(Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"createMarker\"])(), beforeNode);\n  var newPart = new _lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"NodePart\"](containerPart.options);\n  newPart.insertAfterNode(startNode);\n  return newPart;\n};\n\nvar updatePart = function updatePart(part, value) {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nvar insertPartBefore = function insertPartBefore(containerPart, part, ref) {\n  var container = containerPart.startNode.parentNode;\n  var beforeNode = ref ? ref.startNode : containerPart.endNode;\n  var endNode = part.endNode.nextSibling;\n\n  if (endNode !== beforeNode) {\n    Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"reparentNodes\"])(container, part.startNode, endNode, beforeNode);\n  }\n};\n\nvar removePart = function removePart(part) {\n  Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"removeNodes\"])(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n}; // Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\n\n\nvar generateMap = function generateMap(list, start, end) {\n  var map = new Map();\n\n  for (var i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n\n  return map;\n}; // Stores previous ordered list of parts and map of key to index\n\n\nvar partListCache = new WeakMap();\nvar keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\n\nvar repeat = Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"directive\"])(function (items, keyFnOrTemplate, template) {\n  var keyFn;\n\n  if (template === undefined) {\n    template = keyFnOrTemplate;\n  } else if (keyFnOrTemplate !== undefined) {\n    keyFn = keyFnOrTemplate;\n  }\n\n  return function (containerPart) {\n    if (!(containerPart instanceof _lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"NodePart\"])) {\n      throw new Error('repeat can only be used in text bindings');\n    } // Old part & key lists are retrieved from the last update\n    // (associated with the part for this instance of the directive)\n\n\n    var oldParts = partListCache.get(containerPart) || [];\n    var oldKeys = keyListCache.get(containerPart) || []; // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n\n    var newParts = []; // New value list is eagerly generated from items along with a\n    // parallel array indicating its key.\n\n    var newValues = [];\n    var newKeys = [];\n    var index = 0;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n        newKeys[index] = keyFn ? keyFn(item, index) : index;\n        newValues[index] = template(item, index);\n        index++;\n      } // Maps from key to index for current and previous update; these\n      // are generated lazily only when needed as a performance\n      // optimization, since they are only required for multiple\n      // non-contiguous changes in the list, which are less common.\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var newKeyToIndexMap;\n    var oldKeyToIndexMap; // Head and tail pointers to old parts and new values\n\n    var oldHead = 0;\n    var oldTail = oldParts.length - 1;\n    var newHead = 0;\n    var newTail = newValues.length - 1; // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    // arrays of\n    //   their respective keys), head/tail pointers into each, and\n    //   we build up the new list of parts by updating (and when\n    //   needed, moving) old parts or creating new ones. The initial\n    //   scenario might look like this (for brevity of the diagrams,\n    //   the numbers in the array reflect keys associated with the\n    //   old parts or new values, although keys and parts/values are\n    //   actually stored in parallel arrays indexed using the same\n    //   head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //   item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    // swapping, or\n    //   removing parts at the head/tail locations until neither\n    //   head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    // part 0 in-\n    //   place (no need to move it) and record part 0 in the\n    //   `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead\n    //   & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail pointers\n    // do, so\n    //   update part 6 in place (no need to move it), and record\n    //   part 6 in the `newParts` list. Last, advance the `oldTail`\n    //   and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldTail\n    //   & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    // old head/tail\n    //   items was removed. We first need to generate the reverse\n    //   map of new keys to index (`newKeyToIndexMap`), which is\n    //   done once lazily as a performance optimization, since we\n    //   only hit this case if multiple non-contiguous changes were\n    //   made. Note that for contiguous removal anywhere in the\n    //   list, the head and tails would advance from either end and\n    //   pass each other before we get to this case and removals\n    //   would be handled in the final while loop without needing to\n    //   generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    // in the\n    //   `newKeyToIndexMap`), so remove that part from the DOM and\n    //   advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map; remove\n    //   5 and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    // either new or\n    //   moved items; if a new key is in the previous \"old key to\n    //   old index\" map, move the old part to the new location,\n    //   otherwise create and insert a new part. Note that when\n    //   moving an old part we null its position in the oldParts\n    //   array if it lies between the head and tail so we know to\n    //   skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    // were removed;\n    //   so find the `newHead` key in the `oldKeyToIndexMap`, and\n    //   move that old part's DOM into the next head position\n    //   (before `oldParts[oldHead]`). Last, null the part in the\n    //   `oldPart` array since it was somewhere in the remaining\n    //   oldParts still to be scanned (between the head and tail\n    //   pointers) so that we know to skip that old part on future\n    //   iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck; update & move 2\n    //   into place newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance\n    //   newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    // inserted at\n    //   the head pointer is inserted before the current\n    //   `oldParts[oldHead]`, and a part inserted at the tail\n    //   pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are moved\n    //   into place outside in, so to the right of the head pointer\n    //   are old parts, and to the right of the tail pointer are new\n    //   parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    // allowing matching\n    //   and simple updates in place to continue...\n    //\n    // * Example below: the head pointers once again match, so\n    // simply update\n    //   part 1 and record it in the `newParts` array.  Last,\n    //   advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched; update 1\n    //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead\n    //   & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    // being stuck\n    //   (the final else clause in the code below) are marked with\n    //   null, so we always advance old pointers over these so we're\n    //   comparing the next actual old value on either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    // newParts), so\n    //   advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] // old head already used;\n    //   advance newParts: [0, 2, 1,  ,  ,  , 6] // oldHead newKeys:\n    //   [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    // are moved\n    //   from head to tail or tail to head, since they will be\n    //   outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    // key, so\n    //   the part at the `oldTail` position and move its DOM to the\n    //   new head position (before `oldParts[oldHead]`). Last,\n    //   advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   head: update newKeys:  [0, 2, 1, 4, 3, 7, 6]   & move 4,\n    //   advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    // old head\n    //   part in place, and advance the `oldHead` and `newHead`\n    //   pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   and advance newKeys:  [0, 2, 1, 4, 3, 7, 6]    oldHead &\n    //   newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    // we have\n    //   left is additions (if old list exhausted) or removals (if\n    //   new list exhausted). Those are handled in the final while\n    //   loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    // with the\n    //   main loop.  Create the remaining part and insert it at the\n    //   new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not important\n    // to the\n    //   algorithm, as long as the null checks come first (to ensure\n    //   we're always working on valid old parts) and that the final\n    //   else clause comes last (since that's where the expensive\n    //   moves occur). The order of remaining clauses is is just a\n    //   simple guess at which cases will be most common.\n    //\n    // * TODO(kschaaf) Note, we could calculate the longest\n    // increasing\n    //   subsequence (LIS) of old items in new position, and only\n    //   move those not in the LIS set. However that costs O(nlogn)\n    //   time and adds a bit more code, and only helps make rare\n    //   types of mutations require fewer moves. The above handles\n    //   removes, adds, reversal, swaps, and single moves of\n    //   contiguous items in linear time, in the minimum number of\n    //   moves. As the number of multiple moves where LIS might help\n    //   approaches a random shuffle, the LIS optimization becomes\n    //   less helpful, so it seems not worth the code at this point.\n    //   Could reconsider if a compelling case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = updatePart(oldParts[oldHead], newValues[newHead]);\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = updatePart(oldParts[oldTail], newValues[newTail]);\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = updatePart(oldParts[oldHead], newValues[newTail]);\n        insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = updatePart(oldParts[oldTail], newValues[newHead]);\n        insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          var oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          var oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            var newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = updatePart(oldPart, newValues[newHead]);\n            insertPartBefore(containerPart, oldPart, oldParts[oldHead]); // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n\n            oldParts[oldIndex] = null;\n          }\n\n          newHead++;\n        }\n      }\n    } // Add parts for any remaining new values\n\n\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      var _newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n\n      updatePart(_newPart, newValues[newHead]);\n      newParts[newHead++] = _newPart;\n    } // Remove any remaining unused old parts\n\n\n    while (oldHead <= oldTail) {\n      var _oldPart = oldParts[oldHead++];\n\n      if (_oldPart !== null) {\n        removePart(_oldPart);\n      }\n    } // Save order of new parts for next round\n\n\n    partListCache.set(containerPart, newParts);\n    keyListCache.set(containerPart, newKeys);\n  };\n});\n\n//# sourceURL=webpack:///./node_modules/lit-html/directives/repeat.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/default-template-processor.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lit-html/lib/default-template-processor.js ***!
  \*****************************************************************/
/*! exports provided: DefaultTemplateProcessor, defaultTemplateProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultTemplateProcessor\", function() { return DefaultTemplateProcessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultTemplateProcessor\", function() { return defaultTemplateProcessor; });\n/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parts.js */ \"./node_modules/lit-html/lib/parts.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Creates Parts when a template is instantiated.\n */\n\nvar DefaultTemplateProcessor =\n/*#__PURE__*/\nfunction () {\n  function DefaultTemplateProcessor() {\n    _classCallCheck(this, DefaultTemplateProcessor);\n  }\n\n  _createClass(DefaultTemplateProcessor, [{\n    key: \"handleAttributeExpressions\",\n\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    value: function handleAttributeExpressions(element, name, strings, options) {\n      var prefix = name[0];\n\n      if (prefix === '.') {\n        var _comitter = new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"PropertyCommitter\"](element, name.slice(1), strings);\n\n        return _comitter.parts;\n      }\n\n      if (prefix === '@') {\n        return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"EventPart\"](element, name.slice(1), options.eventContext)];\n      }\n\n      if (prefix === '?') {\n        return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"BooleanAttributePart\"](element, name.slice(1), strings)];\n      }\n\n      var comitter = new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"AttributeCommitter\"](element, name, strings);\n      return comitter.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n\n  }, {\n    key: \"handleTextExpression\",\n    value: function handleTextExpression(options) {\n      return new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"NodePart\"](options);\n    }\n  }]);\n\n  return DefaultTemplateProcessor;\n}();\nvar defaultTemplateProcessor = new DefaultTemplateProcessor();\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/default-template-processor.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/directive.js":
/*!************************************************!*\
  !*** ./node_modules/lit-html/lib/directive.js ***!
  \************************************************/
/*! exports provided: directive, isDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"directive\", function() { return directive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDirective\", function() { return isDirective; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\n\nvar directive = function directive(f) {\n  return function () {\n    var d = f.apply(void 0, arguments);\n    directives.set(d, true);\n    return d;\n  };\n};\nvar isDirective = function isDirective(o) {\n  return typeof o === 'function' && directives.has(o);\n};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/directive.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/dom.js":
/*!******************************************!*\
  !*** ./node_modules/lit-html/lib/dom.js ***!
  \******************************************/
/*! exports provided: isCEPolyfill, reparentNodes, removeNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCEPolyfill\", function() { return isCEPolyfill; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reparentNodes\", function() { return reparentNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeNodes\", function() { return removeNodes; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * True if the custom elements polyfill is in use.\n */\nvar isCEPolyfill = window.customElements !== undefined && window.customElements.polyfillWrapFlushCallback !== undefined;\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\n\nvar reparentNodes = function reparentNodes(container, start) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var before = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var node = start;\n\n  while (node !== end) {\n    var n = node.nextSibling;\n    container.insertBefore(node, before);\n    node = n;\n  }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\n\nvar removeNodes = function removeNodes(container, startNode) {\n  var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var node = startNode;\n\n  while (node !== endNode) {\n    var n = node.nextSibling;\n    container.removeChild(node);\n    node = n;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/dom.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/modify-template.js":
/*!******************************************************!*\
  !*** ./node_modules/lit-html/lib/modify-template.js ***!
  \******************************************************/
/*! exports provided: removeNodesFromTemplate, insertNodeIntoTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeNodesFromTemplate\", function() { return removeNodesFromTemplate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertNodeIntoTemplate\", function() { return insertNodeIntoTemplate; });\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template.js */ \"./node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nvar walkerNodeFilter = 133\n/* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */\n;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\n\nfunction removeNodesFromTemplate(template, nodesToRemove) {\n  var content = template.element.content,\n      parts = template.parts;\n  var walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n  var partIndex = nextActiveIndexInTemplateParts(parts);\n  var part = parts[partIndex];\n  var nodeIndex = -1;\n  var removeCount = 0;\n  var nodesToRemoveInTemplate = [];\n  var currentRemovingNode = null;\n\n  while (walker.nextNode()) {\n    nodeIndex++;\n    var node = walker.currentNode; // End removal if stepped past the removing node\n\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    } // A node to remove was found in the template\n\n\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node); // Track node we're removing\n\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    } // When removing, increment count by which to adjust subsequent part indices\n\n\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount; // go to the next active part.\n\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n\n  nodesToRemoveInTemplate.forEach(function (n) {\n    return n.parentNode.removeChild(n);\n  });\n}\n\nvar countNodes = function countNodes(node) {\n  var count = node.nodeType === 11\n  /* Node.DOCUMENT_FRAGMENT_NODE */\n  ? 0 : 1;\n  var walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n\n  while (walker.nextNode()) {\n    count++;\n  }\n\n  return count;\n};\n\nvar nextActiveIndexInTemplateParts = function nextActiveIndexInTemplateParts(parts) {\n  var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n  for (var i = startIndex + 1; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (Object(_template_js__WEBPACK_IMPORTED_MODULE_0__[\"isTemplatePartActive\"])(part)) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\n\n\nfunction insertNodeIntoTemplate(template, node) {\n  var refNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var content = template.element.content,\n      parts = template.parts; // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n\n  var walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n  var partIndex = nextActiveIndexInTemplateParts(parts);\n  var insertCount = 0;\n  var walkerIndex = -1;\n\n  while (walker.nextNode()) {\n    walkerIndex++;\n    var walkerNode = walker.currentNode;\n\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode.insertBefore(node, refNode);\n    }\n\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n\n        return;\n      }\n\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/modify-template.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/part.js":
/*!*******************************************!*\
  !*** ./node_modules/lit-html/lib/part.js ***!
  \*******************************************/
/*! exports provided: noChange, nothing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noChange\", function() { return noChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return nothing; });\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nvar noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\n\nvar nothing = {};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/part.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/parts.js":
/*!********************************************!*\
  !*** ./node_modules/lit-html/lib/parts.js ***!
  \********************************************/
/*! exports provided: isPrimitive, AttributeCommitter, AttributePart, NodePart, BooleanAttributePart, PropertyCommitter, PropertyPart, EventPart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPrimitive\", function() { return isPrimitive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributeCommitter\", function() { return AttributeCommitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributePart\", function() { return AttributePart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodePart\", function() { return NodePart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BooleanAttributePart\", function() { return BooleanAttributePart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyCommitter\", function() { return PropertyCommitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyPart\", function() { return PropertyPart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventPart\", function() { return EventPart; });\n/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directive.js */ \"./node_modules/lit-html/lib/directive.js\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ \"./node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _part_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./part.js */ \"./node_modules/lit-html/lib/part.js\");\n/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./template-instance.js */ \"./node_modules/lit-html/lib/template-instance.js\");\n/* harmony import */ var _template_result_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./template-result.js */ \"./node_modules/lit-html/lib/template-result.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template.js */ \"./node_modules/lit-html/lib/template.js\");\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n\n\n\n\n\nvar isPrimitive = function isPrimitive(value) {\n  return value === null || !(_typeof(value) === 'object' || typeof value === 'function');\n};\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\n\nvar AttributeCommitter =\n/*#__PURE__*/\nfunction () {\n  function AttributeCommitter(element, name, strings) {\n    _classCallCheck(this, AttributeCommitter);\n\n    this.dirty = true;\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n\n    for (var i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n\n\n  _createClass(AttributeCommitter, [{\n    key: \"_createPart\",\n    value: function _createPart() {\n      return new AttributePart(this);\n    }\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      var strings = this.strings;\n      var l = strings.length - 1;\n      var text = '';\n\n      for (var i = 0; i < l; i++) {\n        text += strings[i];\n        var part = this.parts[i];\n\n        if (part !== undefined) {\n          var v = part.value;\n\n          if (v != null && (Array.isArray(v) || // tslint:disable-next-line:no-any\n          typeof v !== 'string' && v[Symbol.iterator])) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = v[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var t = _step.value;\n                text += typeof t === 'string' ? t : String(t);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          } else {\n            text += typeof v === 'string' ? v : String(v);\n          }\n        }\n      }\n\n      text += strings[l];\n      return text;\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      if (this.dirty) {\n        this.dirty = false;\n        this.element.setAttribute(this.name, this._getValue());\n      }\n    }\n  }]);\n\n  return AttributeCommitter;\n}();\nvar AttributePart =\n/*#__PURE__*/\nfunction () {\n  function AttributePart(comitter) {\n    _classCallCheck(this, AttributePart);\n\n    this.value = undefined;\n    this.committer = comitter;\n  }\n\n  _createClass(AttributePart, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      if (value !== _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"] && (!isPrimitive(value) || value !== this.value)) {\n        this.value = value; // If the value is a not a directive, dirty the committer so that it'll\n        // call setAttribute. If the value is a directive, it'll dirty the\n        // committer if it calls setValue().\n\n        if (!Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(value)) {\n          this.committer.dirty = true;\n        }\n      }\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this.value)) {\n        var directive = this.value;\n        this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n        directive(this);\n      }\n\n      if (this.value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n        return;\n      }\n\n      this.committer.commit();\n    }\n  }]);\n\n  return AttributePart;\n}();\nvar NodePart =\n/*#__PURE__*/\nfunction () {\n  function NodePart(options) {\n    _classCallCheck(this, NodePart);\n\n    this.value = undefined;\n    this._pendingValue = undefined;\n    this.options = options;\n  }\n  /**\n   * Inserts this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n\n\n  _createClass(NodePart, [{\n    key: \"appendInto\",\n    value: function appendInto(container) {\n      this.startNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n      this.endNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n\n  }, {\n    key: \"insertAfterNode\",\n    value: function insertAfterNode(ref) {\n      this.startNode = ref;\n      this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n\n  }, {\n    key: \"appendIntoPart\",\n    value: function appendIntoPart(part) {\n      part._insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n\n      part._insert(this.endNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n\n  }, {\n    key: \"insertAfterPart\",\n    value: function insertAfterPart(ref) {\n      ref._insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n\n      this.endNode = ref.endNode;\n      ref.endNode = this.startNode;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this._pendingValue = value;\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this._pendingValue)) {\n        var directive = this._pendingValue;\n        this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n        directive(this);\n      }\n\n      var value = this._pendingValue;\n\n      if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n        return;\n      }\n\n      if (isPrimitive(value)) {\n        if (value !== this.value) {\n          this._commitText(value);\n        }\n      } else if (value instanceof _template_result_js__WEBPACK_IMPORTED_MODULE_4__[\"TemplateResult\"]) {\n        this._commitTemplateResult(value);\n      } else if (value instanceof Node) {\n        this._commitNode(value);\n      } else if (Array.isArray(value) || // tslint:disable-next-line:no-any\n      value[Symbol.iterator]) {\n        this._commitIterable(value);\n      } else if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"]) {\n        this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"];\n        this.clear();\n      } else {\n        // Fallback, will render the string representation\n        this._commitText(value);\n      }\n    }\n  }, {\n    key: \"_insert\",\n    value: function _insert(node) {\n      this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n  }, {\n    key: \"_commitNode\",\n    value: function _commitNode(value) {\n      if (this.value === value) {\n        return;\n      }\n\n      this.clear();\n\n      this._insert(value);\n\n      this.value = value;\n    }\n  }, {\n    key: \"_commitText\",\n    value: function _commitText(value) {\n      var node = this.startNode.nextSibling;\n      value = value == null ? '' : value;\n\n      if (node === this.endNode.previousSibling && node.nodeType === 3\n      /* Node.TEXT_NODE */\n      ) {\n          // If we only have a single text node between the markers, we can just\n          // set its value, rather than replacing it.\n          // TODO(justinfagnani): Can we just check if this.value is primitive?\n          node.data = value;\n        } else {\n        this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n      }\n\n      this.value = value;\n    }\n  }, {\n    key: \"_commitTemplateResult\",\n    value: function _commitTemplateResult(value) {\n      var template = this.options.templateFactory(value);\n\n      if (this.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_3__[\"TemplateInstance\"] && this.value.template === template) {\n        this.value.update(value.values);\n      } else {\n        // Make sure we propagate the template processor from the TemplateResult\n        // so that we use its syntax extension, etc. The template factory comes\n        // from the render function options so that it can control template\n        // caching and preprocessing.\n        var instance = new _template_instance_js__WEBPACK_IMPORTED_MODULE_3__[\"TemplateInstance\"](template, value.processor, this.options);\n\n        var fragment = instance._clone();\n\n        instance.update(value.values);\n\n        this._commitNode(fragment);\n\n        this.value = instance;\n      }\n    }\n  }, {\n    key: \"_commitIterable\",\n    value: function _commitIterable(value) {\n      // For an Iterable, we create a new InstancePart per item, then set its\n      // value to the item. This is a little bit of overhead for every item in\n      // an Iterable, but it lets us recurse easily and efficiently update Arrays\n      // of TemplateResults that will be commonly returned from expressions like:\n      // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n      // If _value is an array, then the previous render was of an\n      // iterable and _value will contain the NodeParts from the previous\n      // render. If _value is not an array, clear this part and make a new\n      // array for NodeParts.\n      if (!Array.isArray(this.value)) {\n        this.value = [];\n        this.clear();\n      } // Lets us keep track of how many items we stamped so we can clear leftover\n      // items from a previous render\n\n\n      var itemParts = this.value;\n      var partIndex = 0;\n      var itemPart;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = value[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          // Try to reuse an existing part\n          itemPart = itemParts[partIndex]; // If no existing part, create a new one\n\n          if (itemPart === undefined) {\n            itemPart = new NodePart(this.options);\n            itemParts.push(itemPart);\n\n            if (partIndex === 0) {\n              itemPart.appendIntoPart(this);\n            } else {\n              itemPart.insertAfterPart(itemParts[partIndex - 1]);\n            }\n          }\n\n          itemPart.setValue(item);\n          itemPart.commit();\n          partIndex++;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (partIndex < itemParts.length) {\n        // Truncate the parts array so _value reflects the current state\n        itemParts.length = partIndex;\n        this.clear(itemPart && itemPart.endNode);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var startNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.startNode;\n      Object(_dom_js__WEBPACK_IMPORTED_MODULE_1__[\"removeNodes\"])(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n  }]);\n\n  return NodePart;\n}();\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\n\nvar BooleanAttributePart =\n/*#__PURE__*/\nfunction () {\n  function BooleanAttributePart(element, name, strings) {\n    _classCallCheck(this, BooleanAttributePart);\n\n    this.value = undefined;\n    this._pendingValue = undefined;\n\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error('Boolean attributes can only contain a single expression');\n    }\n\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  _createClass(BooleanAttributePart, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this._pendingValue = value;\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this._pendingValue)) {\n        var directive = this._pendingValue;\n        this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n        directive(this);\n      }\n\n      if (this._pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n        return;\n      }\n\n      var value = !!this._pendingValue;\n\n      if (this.value !== value) {\n        if (value) {\n          this.element.setAttribute(this.name, '');\n        } else {\n          this.element.removeAttribute(this.name);\n        }\n      }\n\n      this.value = value;\n      this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n    }\n  }]);\n\n  return BooleanAttributePart;\n}();\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\n\nvar PropertyCommitter =\n/*#__PURE__*/\nfunction (_AttributeCommitter) {\n  _inherits(PropertyCommitter, _AttributeCommitter);\n\n  function PropertyCommitter(element, name, strings) {\n    var _this;\n\n    _classCallCheck(this, PropertyCommitter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyCommitter).call(this, element, name, strings));\n    _this.single = strings.length === 2 && strings[0] === '' && strings[1] === '';\n    return _this;\n  }\n\n  _createClass(PropertyCommitter, [{\n    key: \"_createPart\",\n    value: function _createPart() {\n      return new PropertyPart(this);\n    }\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      if (this.single) {\n        return this.parts[0].value;\n      }\n\n      return _get(_getPrototypeOf(PropertyCommitter.prototype), \"_getValue\", this).call(this);\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      if (this.dirty) {\n        this.dirty = false; // tslint:disable-next-line:no-any\n\n        this.element[this.name] = this._getValue();\n      }\n    }\n  }]);\n\n  return PropertyCommitter;\n}(AttributeCommitter);\nvar PropertyPart =\n/*#__PURE__*/\nfunction (_AttributePart) {\n  _inherits(PropertyPart, _AttributePart);\n\n  function PropertyPart() {\n    _classCallCheck(this, PropertyPart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PropertyPart).apply(this, arguments));\n  }\n\n  return PropertyPart;\n}(AttributePart); // Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\n\nvar eventOptionsSupported = false;\n\ntry {\n  var options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n\n  }; // tslint:disable-next-line:no-any\n\n  window.addEventListener('test', options, options); // tslint:disable-next-line:no-any\n\n  window.removeEventListener('test', options, options);\n} catch (_e) {}\n\nvar EventPart =\n/*#__PURE__*/\nfunction () {\n  function EventPart(element, eventName, eventContext) {\n    var _this2 = this;\n\n    _classCallCheck(this, EventPart);\n\n    this.value = undefined;\n    this._pendingValue = undefined;\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n\n    this._boundHandleEvent = function (e) {\n      return _this2.handleEvent(e);\n    };\n  }\n\n  _createClass(EventPart, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this._pendingValue = value;\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this._pendingValue)) {\n        var directive = this._pendingValue;\n        this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n        directive(this);\n      }\n\n      if (this._pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n        return;\n      }\n\n      var newListener = this._pendingValue;\n      var oldListener = this.value;\n      var shouldRemoveListener = newListener == null || oldListener != null && (newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive);\n      var shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n\n      if (shouldRemoveListener) {\n        this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n      }\n\n      if (shouldAddListener) {\n        this._options = getOptions(newListener);\n        this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n      }\n\n      this.value = newListener;\n      this._pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (typeof this.value === 'function') {\n        this.value.call(this.eventContext || this.element, event);\n      } else {\n        this.value.handleEvent(event);\n      }\n    }\n  }]);\n\n  return EventPart;\n}(); // We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\n\nvar getOptions = function getOptions(o) {\n  return o && (eventOptionsSupported ? {\n    capture: o.capture,\n    passive: o.passive,\n    once: o.once\n  } : o.capture);\n};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/parts.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/render.js":
/*!*********************************************!*\
  !*** ./node_modules/lit-html/lib/render.js ***!
  \*********************************************/
/*! exports provided: parts, render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parts\", function() { return parts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"./node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parts.js */ \"./node_modules/lit-html/lib/parts.js\");\n/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./template-factory.js */ \"./node_modules/lit-html/lib/template-factory.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n\n\nvar parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\n\nvar render = function render(result, container, options) {\n  var part = parts.get(container);\n\n  if (part === undefined) {\n    Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"removeNodes\"])(container, container.firstChild);\n    parts.set(container, part = new _parts_js__WEBPACK_IMPORTED_MODULE_1__[\"NodePart\"](Object.assign({\n      templateFactory: _template_factory_js__WEBPACK_IMPORTED_MODULE_2__[\"templateFactory\"]\n    }, options)));\n    part.appendInto(container);\n  }\n\n  part.setValue(result);\n  part.commit();\n};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/render.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/shady-render.js":
/*!***************************************************!*\
  !*** ./node_modules/lit-html/lib/shady-render.js ***!
  \***************************************************/
/*! exports provided: html, svg, TemplateResult, render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"./node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _modify_template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modify-template.js */ \"./node_modules/lit-html/lib/modify-template.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render.js */ \"./node_modules/lit-html/lib/render.js\");\n/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./template-factory.js */ \"./node_modules/lit-html/lib/template-factory.js\");\n/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./template-instance.js */ \"./node_modules/lit-html/lib/template-instance.js\");\n/* harmony import */ var _template_result_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template-result.js */ \"./node_modules/lit-html/lib/template-result.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./template.js */ \"./node_modules/lit-html/lib/template.js\");\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lit-html.js */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return _lit_html_js__WEBPACK_IMPORTED_MODULE_7__[\"html\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return _lit_html_js__WEBPACK_IMPORTED_MODULE_7__[\"svg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return _lit_html_js__WEBPACK_IMPORTED_MODULE_7__[\"TemplateResult\"]; });\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\n\n\n\n\n\n\n\n // Get a key to lookup in `templateCaches`.\n\nvar getTemplateCacheKey = function getTemplateCacheKey(type, scopeName) {\n  return \"\".concat(type, \"--\").concat(scopeName);\n};\n\nvar compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\"Incompatible ShadyCSS version detected.\" + \"Please update to at least @webcomponents/webcomponentsjs@2.0.2 and\" + \"@webcomponents/shadycss@1.3.1.\");\n  compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\n\n\nvar shadyTemplateFactory = function shadyTemplateFactory(scopeName) {\n  return function (result) {\n    var cacheKey = getTemplateCacheKey(result.type, scopeName);\n    var templateCache = _template_factory_js__WEBPACK_IMPORTED_MODULE_3__[\"templateCaches\"].get(cacheKey);\n\n    if (templateCache === undefined) {\n      templateCache = {\n        stringsArray: new WeakMap(),\n        keyString: new Map()\n      };\n      _template_factory_js__WEBPACK_IMPORTED_MODULE_3__[\"templateCaches\"].set(cacheKey, templateCache);\n    }\n\n    var template = templateCache.stringsArray.get(result.strings);\n\n    if (template !== undefined) {\n      return template;\n    }\n\n    var key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_6__[\"marker\"]);\n    template = templateCache.keyString.get(key);\n\n    if (template === undefined) {\n      var element = result.getTemplateElement();\n\n      if (compatibleShadyCSSVersion) {\n        window.ShadyCSS.prepareTemplateDom(element, scopeName);\n      }\n\n      template = new _template_js__WEBPACK_IMPORTED_MODULE_6__[\"Template\"](result, element);\n      templateCache.keyString.set(key, template);\n    }\n\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n  };\n};\n\nvar TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\n\nvar removeStylesFromLitTemplates = function removeStylesFromLitTemplates(scopeName) {\n  TEMPLATE_TYPES.forEach(function (type) {\n    var templates = _template_factory_js__WEBPACK_IMPORTED_MODULE_3__[\"templateCaches\"].get(getTemplateCacheKey(type, scopeName));\n\n    if (templates !== undefined) {\n      templates.keyString.forEach(function (template) {\n        var content = template.element.content; // IE 11 doesn't support the iterable param Set constructor\n\n        var styles = new Set();\n        Array.from(content.querySelectorAll('style')).forEach(function (s) {\n          styles.add(s);\n        });\n        Object(_modify_template_js__WEBPACK_IMPORTED_MODULE_1__[\"removeNodesFromTemplate\"])(template, styles);\n      });\n    }\n  });\n};\n\nvar shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\n\nvar prepareTemplateStyles = function prepareTemplateStyles(renderedDOM, template, scopeName) {\n  shadyRenderSet.add(scopeName); // Move styles out of rendered DOM and store.\n\n  var styles = renderedDOM.querySelectorAll('style'); // If there are no styles, skip unnecessary work\n\n  if (styles.length === 0) {\n    // Ensure prepareTemplateStyles is called to support adding\n    // styles via `prepareAdoptedCssText` since that requires that\n    // `prepareTemplateStyles` is called.\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    return;\n  }\n\n  var condensedStyle = document.createElement('style'); // Collect styles into a single style. This helps us make sure ShadyCSS\n  // manipulations will not prevent us from being able to fix up template\n  // part indices.\n  // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n  // currently does this anyway. When it does not, this should be changed.\n\n  for (var i = 0; i < styles.length; i++) {\n    var style = styles[i];\n    style.parentNode.removeChild(style);\n    condensedStyle.textContent += style.textContent;\n  } // Remove styles from nested templates in this scope.\n\n\n  removeStylesFromLitTemplates(scopeName); // And then put the condensed style into the \"root\" template passed in as\n  // `template`.\n\n  Object(_modify_template_js__WEBPACK_IMPORTED_MODULE_1__[\"insertNodeIntoTemplate\"])(template, condensedStyle, template.element.content.firstChild); // Note, it's important that ShadyCSS gets the template that `lit-html`\n  // will actually render so that it can update the style inside when\n  // needed (e.g. @apply native Shadow DOM case).\n\n  window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n\n  if (window.ShadyCSS.nativeShadow) {\n    // When in native Shadow DOM, re-add styling to rendered content using\n    // the style ShadyCSS produced.\n    var _style = template.element.content.querySelector('style');\n\n    renderedDOM.insertBefore(_style.cloneNode(true), renderedDOM.firstChild);\n  } else {\n    // When not in native Shadow DOM, at this point ShadyCSS will have\n    // removed the style from the lit template and parts will be broken as a\n    // result. To fix this, we put back the style node ShadyCSS removed\n    // and then tell lit to remove that node from the template.\n    // NOTE, ShadyCSS creates its own style so we can safely add/remove\n    // `condensedStyle` here.\n    template.element.content.insertBefore(condensedStyle, template.element.content.firstChild);\n    var removes = new Set();\n    removes.add(condensedStyle);\n    Object(_modify_template_js__WEBPACK_IMPORTED_MODULE_1__[\"removeNodesFromTemplate\"])(template, removes);\n  }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\n\n\nvar render = function render(result, container, options) {\n  var scopeName = options.scopeName;\n  var hasRendered = _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].has(container);\n  var needsScoping = container instanceof ShadowRoot && compatibleShadyCSSVersion && result instanceof _template_result_js__WEBPACK_IMPORTED_MODULE_5__[\"TemplateResult\"]; // Handle first render to a scope specially...\n\n  var firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName); // On first scope render, render into a fragment; this cannot be a single\n  // fragment that is reused since nested renders can occur synchronously.\n\n  var renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n  Object(_render_js__WEBPACK_IMPORTED_MODULE_2__[\"render\"])(result, renderContainer, Object.assign({\n    templateFactory: shadyTemplateFactory(scopeName)\n  }, options)); // When performing first scope render,\n  // (1) We've rendered into a fragment so that there's a chance to\n  // `prepareTemplateStyles` before sub-elements hit the DOM\n  // (which might cause them to render based on a common pattern of\n  // rendering in a custom element's `connectedCallback`);\n  // (2) Scope the template with ShadyCSS one time only for this scope.\n  // (3) Render the fragment into the container and make sure the\n  // container knows its `part` is the one we just rendered. This ensures\n  // DOM will be re-used on subsequent renders.\n\n  if (firstScopeRender) {\n    var part = _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].get(renderContainer);\n    _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].delete(renderContainer);\n\n    if (part.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_4__[\"TemplateInstance\"]) {\n      prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n    }\n\n    Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"removeNodes\"])(container, container.firstChild);\n    container.appendChild(renderContainer);\n    _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].set(container, part);\n  } // After elements have hit the DOM, update styling if this is the\n  // initial render to this container.\n  // This is needed whenever dynamic changes are made so it would be\n  // safest to do every render; however, this would regress performance\n  // so we leave it up to the user to call `ShadyCSSS.styleElement`\n  // for dynamic changes.\n\n\n  if (!hasRendered && needsScoping) {\n    window.ShadyCSS.styleElement(container.host);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/shady-render.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/template-factory.js":
/*!*******************************************************!*\
  !*** ./node_modules/lit-html/lib/template-factory.js ***!
  \*******************************************************/
/*! exports provided: templateFactory, templateCaches */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"templateFactory\", function() { return templateFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"templateCaches\", function() { return templateCaches; });\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template.js */ \"./node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\n\nfunction templateFactory(result) {\n  var templateCache = templateCaches.get(result.type);\n\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap(),\n      keyString: new Map()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  var template = templateCache.stringsArray.get(result.strings);\n\n  if (template !== undefined) {\n    return template;\n  } // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n\n\n  var key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_0__[\"marker\"]); // Check if we already have a Template for this key\n\n  template = templateCache.keyString.get(key);\n\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new _template_js__WEBPACK_IMPORTED_MODULE_0__[\"Template\"](result, result.getTemplateElement()); // Cache the Template for this key\n\n    templateCache.keyString.set(key, template);\n  } // Cache all future queries for this TemplateStringsArray\n\n\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\nvar templateCaches = new Map();\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/template-factory.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/template-instance.js":
/*!********************************************************!*\
  !*** ./node_modules/lit-html/lib/template-instance.js ***!
  \********************************************************/
/*! exports provided: TemplateInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplateInstance\", function() { return TemplateInstance; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"./node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ \"./node_modules/lit-html/lib/template.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\n\nvar TemplateInstance =\n/*#__PURE__*/\nfunction () {\n  function TemplateInstance(template, processor, options) {\n    _classCallCheck(this, TemplateInstance);\n\n    this._parts = [];\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  _createClass(TemplateInstance, [{\n    key: \"update\",\n    value: function update(values) {\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var part = _step.value;\n\n          if (part !== undefined) {\n            part.setValue(values[i]);\n          }\n\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _part = _step2.value;\n\n          if (_part !== undefined) {\n            _part.commit();\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var _this = this;\n\n      // When using the Custom Elements polyfill, clone the node, rather than\n      // importing it, to keep the fragment in the template's document. This\n      // leaves the fragment inert so custom elements won't upgrade and\n      // potentially modify their contents by creating a polyfilled ShadowRoot\n      // while we traverse the tree.\n      var fragment = _dom_js__WEBPACK_IMPORTED_MODULE_0__[\"isCEPolyfill\"] ? this.template.element.content.cloneNode(true) : document.importNode(this.template.element.content, true);\n      var parts = this.template.parts;\n      var partIndex = 0;\n      var nodeIndex = 0;\n\n      var _prepareInstance = function _prepareInstance(fragment) {\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n        // null\n        var walker = document.createTreeWalker(fragment, 133\n        /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */\n        , null, false);\n        var node = walker.nextNode(); // Loop through all the nodes and parts of a template\n\n        while (partIndex < parts.length && node !== null) {\n          var part = parts[partIndex]; // Consecutive Parts may have the same node index, in the case of\n          // multiple bound attributes on an element. So each iteration we either\n          // increment the nodeIndex, if we aren't on a node with a part, or the\n          // partIndex if we are. By not incrementing the nodeIndex when we find a\n          // part, we allow for the next part to be associated with the current\n          // node if neccessasry.\n\n          if (!Object(_template_js__WEBPACK_IMPORTED_MODULE_1__[\"isTemplatePartActive\"])(part)) {\n            _this._parts.push(undefined);\n\n            partIndex++;\n          } else if (nodeIndex === part.index) {\n            if (part.type === 'node') {\n              var _part2 = _this.processor.handleTextExpression(_this.options);\n\n              _part2.insertAfterNode(node.previousSibling);\n\n              _this._parts.push(_part2);\n            } else {\n              var _this$_parts;\n\n              (_this$_parts = _this._parts).push.apply(_this$_parts, _toConsumableArray(_this.processor.handleAttributeExpressions(node, part.name, part.strings, _this.options)));\n            }\n\n            partIndex++;\n          } else {\n            nodeIndex++;\n\n            if (node.nodeName === 'TEMPLATE') {\n              _prepareInstance(node.content);\n            }\n\n            node = walker.nextNode();\n          }\n        }\n      };\n\n      _prepareInstance(fragment);\n\n      if (_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"isCEPolyfill\"]) {\n        document.adoptNode(fragment);\n        customElements.upgrade(fragment);\n      }\n\n      return fragment;\n    }\n  }]);\n\n  return TemplateInstance;\n}();\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/template-instance.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/template-result.js":
/*!******************************************************!*\
  !*** ./node_modules/lit-html/lib/template-result.js ***!
  \******************************************************/
/*! exports provided: TemplateResult, SVGTemplateResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return TemplateResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SVGTemplateResult\", function() { return SVGTemplateResult; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"./node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ \"./node_modules/lit-html/lib/template.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\n\nvar TemplateResult =\n/*#__PURE__*/\nfunction () {\n  function TemplateResult(strings, values, type, processor) {\n    _classCallCheck(this, TemplateResult);\n\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n\n\n  _createClass(TemplateResult, [{\n    key: \"getHTML\",\n    value: function getHTML() {\n      var endIndex = this.strings.length - 1;\n      var html = '';\n\n      for (var i = 0; i < endIndex; i++) {\n        var s = this.strings[i]; // This exec() call does two things:\n        // 1) Appends a suffix to the bound attribute name to opt out of special\n        // attribute value parsing that IE11 and Edge do, like for style and\n        // many SVG attributes. The Template class also appends the same suffix\n        // when looking up attributes to create Parts.\n        // 2) Adds an unquoted-attribute-safe marker for the first expression in\n        // an attribute. Subsequent attribute expressions will use node markers,\n        // and this is safe since attributes with multiple expressions are\n        // guaranteed to be quoted.\n\n        var match = _template_js__WEBPACK_IMPORTED_MODULE_1__[\"lastAttributeNameRegex\"].exec(s);\n\n        if (match) {\n          // We're starting a new bound attribute.\n          // Add the safe attribute suffix, and use unquoted-attribute-safe\n          // marker.\n          html += s.substr(0, match.index) + match[1] + match[2] + _template_js__WEBPACK_IMPORTED_MODULE_1__[\"boundAttributeSuffix\"] + match[3] + _template_js__WEBPACK_IMPORTED_MODULE_1__[\"marker\"];\n        } else {\n          // We're either in a bound node, or trailing bound attribute.\n          // Either way, nodeMarker is safe to use.\n          html += s + _template_js__WEBPACK_IMPORTED_MODULE_1__[\"nodeMarker\"];\n        }\n      }\n\n      return html + this.strings[endIndex];\n    }\n  }, {\n    key: \"getTemplateElement\",\n    value: function getTemplateElement() {\n      var template = document.createElement('template');\n      template.innerHTML = this.getHTML();\n      return template;\n    }\n  }]);\n\n  return TemplateResult;\n}();\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\n\nvar SVGTemplateResult =\n/*#__PURE__*/\nfunction (_TemplateResult) {\n  _inherits(SVGTemplateResult, _TemplateResult);\n\n  function SVGTemplateResult() {\n    _classCallCheck(this, SVGTemplateResult);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SVGTemplateResult).apply(this, arguments));\n  }\n\n  _createClass(SVGTemplateResult, [{\n    key: \"getHTML\",\n    value: function getHTML() {\n      return \"<svg>\".concat(_get(_getPrototypeOf(SVGTemplateResult.prototype), \"getHTML\", this).call(this), \"</svg>\");\n    }\n  }, {\n    key: \"getTemplateElement\",\n    value: function getTemplateElement() {\n      var template = _get(_getPrototypeOf(SVGTemplateResult.prototype), \"getTemplateElement\", this).call(this);\n\n      var content = template.content;\n      var svgElement = content.firstChild;\n      content.removeChild(svgElement);\n      Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"reparentNodes\"])(content, svgElement.firstChild);\n      return template;\n    }\n  }]);\n\n  return SVGTemplateResult;\n}(TemplateResult);\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/template-result.js?");

/***/ }),

/***/ "./node_modules/lit-html/lib/template.js":
/*!***********************************************!*\
  !*** ./node_modules/lit-html/lib/template.js ***!
  \***********************************************/
/*! exports provided: marker, nodeMarker, markerRegex, boundAttributeSuffix, Template, isTemplatePartActive, createMarker, lastAttributeNameRegex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"marker\", function() { return marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nodeMarker\", function() { return nodeMarker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"markerRegex\", function() { return markerRegex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boundAttributeSuffix\", function() { return boundAttributeSuffix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Template\", function() { return Template; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTemplatePartActive\", function() { return isTemplatePartActive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMarker\", function() { return createMarker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastAttributeNameRegex\", function() { return lastAttributeNameRegex; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nvar marker = \"{{lit-\".concat(String(Math.random()).slice(2), \"}}\");\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\n\nvar nodeMarker = \"<!--\".concat(marker, \"-->\");\nvar markerRegex = new RegExp(\"\".concat(marker, \"|\").concat(nodeMarker));\n/**\n * Suffix appended to all bound attribute names.\n */\n\nvar boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\n\nvar Template = function Template(result, element) {\n  var _this = this;\n\n  _classCallCheck(this, Template);\n\n  this.parts = [];\n  this.element = element;\n  var index = -1;\n  var partIndex = 0;\n  var nodesToRemove = [];\n\n  var _prepareTemplate = function _prepareTemplate(template) {\n    var content = template.content; // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n    // null\n\n    var walker = document.createTreeWalker(content, 133\n    /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */\n    , null, false); // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n\n    var lastPartIndex = 0;\n\n    while (walker.nextNode()) {\n      index++;\n      var node = walker.currentNode;\n\n      if (node.nodeType === 1\n      /* Node.ELEMENT_NODE */\n      ) {\n          if (node.hasAttributes()) {\n            var attributes = node.attributes; // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondance between part index and attribute index.\n\n            var count = 0;\n\n            for (var i = 0; i < attributes.length; i++) {\n              if (attributes[i].value.indexOf(marker) >= 0) {\n                count++;\n              }\n            }\n\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              var stringForPart = result.strings[partIndex]; // Find the attribute name\n\n              var name = lastAttributeNameRegex.exec(stringForPart)[2]; // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n\n              var attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n              var attributeValue = node.getAttribute(attributeLookupName);\n              var strings = attributeValue.split(markerRegex);\n\n              _this.parts.push({\n                type: 'attribute',\n                index: index,\n                name: name,\n                strings: strings\n              });\n\n              node.removeAttribute(attributeLookupName);\n              partIndex += strings.length - 1;\n            }\n          }\n\n          if (node.tagName === 'TEMPLATE') {\n            _prepareTemplate(node);\n          }\n        } else if (node.nodeType === 3\n      /* Node.TEXT_NODE */\n      ) {\n          var data = node.data;\n\n          if (data.indexOf(marker) >= 0) {\n            var parent = node.parentNode;\n\n            var _strings = data.split(markerRegex);\n\n            var lastIndex = _strings.length - 1; // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n\n            for (var _i = 0; _i < lastIndex; _i++) {\n              parent.insertBefore(_strings[_i] === '' ? createMarker() : document.createTextNode(_strings[_i]), node);\n\n              _this.parts.push({\n                type: 'node',\n                index: ++index\n              });\n            } // If there's no text, we must insert a comment to mark our place.\n            // Else, we can trust it will stick around after cloning.\n\n\n            if (_strings[lastIndex] === '') {\n              parent.insertBefore(createMarker(), node);\n              nodesToRemove.push(node);\n            } else {\n              node.data = _strings[lastIndex];\n            } // We have a part for each match found\n\n\n            partIndex += lastIndex;\n          }\n        } else if (node.nodeType === 8\n      /* Node.COMMENT_NODE */\n      ) {\n          if (node.data === marker) {\n            var _parent = node.parentNode; // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * The previousSibling is already the start of a previous part\n\n            if (node.previousSibling === null || index === lastPartIndex) {\n              index++;\n\n              _parent.insertBefore(createMarker(), node);\n            }\n\n            lastPartIndex = index;\n\n            _this.parts.push({\n              type: 'node',\n              index: index\n            }); // If we don't have a nextSibling, keep this node so we have an end.\n            // Else, we can remove it to save future costs.\n\n\n            if (node.nextSibling === null) {\n              node.data = '';\n            } else {\n              nodesToRemove.push(node);\n              index--;\n            }\n\n            partIndex++;\n          } else {\n            var _i2 = -1;\n\n            while ((_i2 = node.data.indexOf(marker, _i2 + 1)) !== -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              _this.parts.push({\n                type: 'node',\n                index: -1\n              });\n            }\n          }\n        }\n    }\n  };\n\n  _prepareTemplate(element); // Remove text binding nodes after the walk to not disturb the TreeWalker\n\n\n  var _arr = nodesToRemove;\n\n  for (var _i3 = 0; _i3 < _arr.length; _i3++) {\n    var n = _arr[_i3];\n    n.parentNode.removeChild(n);\n  }\n};\nvar isTemplatePartActive = function isTemplatePartActive(part) {\n  return part.index !== -1;\n}; // Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\n\nvar createMarker = function createMarker() {\n  return document.createComment('');\n};\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\n\nvar lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n\n//# sourceURL=webpack:///./node_modules/lit-html/lib/template.js?");

/***/ }),

/***/ "./node_modules/lit-html/lit-html.js":
/*!*******************************************!*\
  !*** ./node_modules/lit-html/lit-html.js ***!
  \*******************************************/
/*! exports provided: DefaultTemplateProcessor, defaultTemplateProcessor, directive, isDirective, removeNodes, reparentNodes, noChange, nothing, AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart, parts, render, templateCaches, templateFactory, TemplateInstance, SVGTemplateResult, TemplateResult, createMarker, isTemplatePartActive, Template, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return html; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return svg; });\n/* harmony import */ var _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/default-template-processor.js */ \"./node_modules/lit-html/lib/default-template-processor.js\");\n/* harmony import */ var _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/template-result.js */ \"./node_modules/lit-html/lib/template-result.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultTemplateProcessor\", function() { return _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"DefaultTemplateProcessor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultTemplateProcessor\", function() { return _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]; });\n\n/* harmony import */ var _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/directive.js */ \"./node_modules/lit-html/lib/directive.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"directive\", function() { return _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__[\"directive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDirective\", function() { return _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__[\"isDirective\"]; });\n\n/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/dom.js */ \"./node_modules/lit-html/lib/dom.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeNodes\", function() { return _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__[\"removeNodes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"reparentNodes\", function() { return _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__[\"reparentNodes\"]; });\n\n/* harmony import */ var _lib_part_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/part.js */ \"./node_modules/lit-html/lib/part.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noChange\", function() { return _lib_part_js__WEBPACK_IMPORTED_MODULE_4__[\"noChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return _lib_part_js__WEBPACK_IMPORTED_MODULE_4__[\"nothing\"]; });\n\n/* harmony import */ var _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/parts.js */ \"./node_modules/lit-html/lib/parts.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AttributeCommitter\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"AttributeCommitter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AttributePart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"AttributePart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BooleanAttributePart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"BooleanAttributePart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventPart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"EventPart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPrimitive\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"isPrimitive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NodePart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"NodePart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PropertyCommitter\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"PropertyCommitter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PropertyPart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"PropertyPart\"]; });\n\n/* harmony import */ var _lib_render_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/render.js */ \"./node_modules/lit-html/lib/render.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parts\", function() { return _lib_render_js__WEBPACK_IMPORTED_MODULE_6__[\"parts\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _lib_render_js__WEBPACK_IMPORTED_MODULE_6__[\"render\"]; });\n\n/* harmony import */ var _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/template-factory.js */ \"./node_modules/lit-html/lib/template-factory.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"templateCaches\", function() { return _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__[\"templateCaches\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"templateFactory\", function() { return _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__[\"templateFactory\"]; });\n\n/* harmony import */ var _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/template-instance.js */ \"./node_modules/lit-html/lib/template-instance.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateInstance\", function() { return _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__[\"TemplateInstance\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SVGTemplateResult\", function() { return _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"SVGTemplateResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"TemplateResult\"]; });\n\n/* harmony import */ var _lib_template_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/template.js */ \"./node_modules/lit-html/lib/template.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createMarker\", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__[\"createMarker\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isTemplatePartActive\", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__[\"isTemplatePartActive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Template\", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__[\"Template\"]; });\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\n\n\n\n // TODO(justinfagnani): remove line when we get NodePart moving methods\n\n\n\n\n\n\n\n\n // IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\n\nvar html = function html(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  return new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"TemplateResult\"](strings, values, 'html', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]);\n};\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\n\nvar svg = function svg(strings) {\n  for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    values[_key2 - 1] = arguments[_key2];\n  }\n\n  return new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"SVGTemplateResult\"](strings, values, 'svg', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]);\n};\n\n//# sourceURL=webpack:///./node_modules/lit-html/lit-html.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime-module.js":
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(/*! ./runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/regenerator-runtime/runtime-module.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n\n\n//# sourceURL=webpack:///./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./src/components/to-do-app.js":
/*!*************************************!*\
  !*** ./src/components/to-do-app.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-element */ \"./node_modules/lit-element/lit-element.js\");\n/* harmony import */ var lit_html_directives_repeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/directives/repeat */ \"./node_modules/lit-html/directives/repeat.js\");\n/* harmony import */ var _to_do_item_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./to-do-item.js */ \"./src/components/to-do-item.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n         :host {\\n             display: block;\\n             font-family: sans-serif;\\n             text-align: center;\\n         }\\n         button {\\n             border: none;\\n             cursor: pointer;\\n         }\\n         ul {\\n             list-style: none;\\n             padding: 0;\\n         }\\n          \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                     <to-do-item \\n                       .checked=\", \"\\n                       .index=\", \"\\n                       .text=\", \"\\n                       @onRemove=\", \"\\n                       @onToggle=\", \">    \\n                    </to-do-item>\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            <h1>To do</h1>\\n            <form id=\\\"todo-input\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"Add a new to do\\\"></input>\\n                <button @click=\", \">\\u2705</button>\\n            </form>\\n            <ul id=\\\"todos\\\">\\n                \", \"\\n            </ul>\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar TodoApp =\n/*#__PURE__*/\nfunction (_LitElement) {\n  _inherits(TodoApp, _LitElement);\n\n  _createClass(TodoApp, null, [{\n    key: \"properties\",\n    get: function get() {\n      return {\n        todos: {\n          type: Array\n        }\n      };\n    }\n  }]);\n\n  function TodoApp() {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoApp).call(this));\n    _this.todos = [];\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"firstUpdated\",\n    value: function firstUpdated() {\n      this.$input = this.shadowRoot.querySelector('input');\n    }\n  }, {\n    key: \"_removeTodo\",\n    value: function _removeTodo(e) {\n      this.todos = this.todos.filter(function (todo, index) {\n        return index !== e.detail;\n      });\n    }\n  }, {\n    key: \"_toggleTodo\",\n    value: function _toggleTodo(e) {\n      this.todos = this.todos.map(function (todo, index) {\n        return index === e.detail ? _objectSpread({}, todo, {\n          checked: !todo.checked\n        }) : todo;\n      });\n    }\n  }, {\n    key: \"_addTodo\",\n    value: function _addTodo(e) {\n      e.preventDefault();\n\n      if (this.$input.value.length > 0) {\n        this.todos = [].concat(_toConsumableArray(this.todos), [{\n          text: this.$input.value,\n          checked: false\n        }]);\n        this.$input.value = '';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), this._addTodo, Object(lit_html_directives_repeat__WEBPACK_IMPORTED_MODULE_1__[\"repeat\"])(this.todos, function (todo) {\n        return todo.text;\n      }, function (todo, index) {\n        return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject2(), todo.checked, index, todo.text, _this2._removeTodo, _this2._toggleTodo);\n      }));\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(_templateObject3());\n    }\n  }]);\n\n  return TodoApp;\n}(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"]);\n\nwindow.customElements.define('to-do-app', TodoApp);\n\n//# sourceURL=webpack:///./src/components/to-do-app.js?");

/***/ }),

/***/ "./src/components/to-do-item.js":
/*!**************************************!*\
  !*** ./src/components/to-do-item.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-element */ \"./node_modules/lit-element/lit-element.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      :host {\\n        display: block;\\n        font-family: sans-serif;\\n      }\\n\\n      .completed {\\n        text-decoration: line-through;\\n      }\\n\\n      button {\\n        cursor: pointer;\\n        border: none;\\n      }\\n      \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            <li class=\\\"item\\\">\\n                <input \\n                    type=\\\"checkbox\\\" \\n                    ?checked=\", \" \\n                    @change=\", \">\\n                </input>\\n                <label class=\", \">\", \"</label>\\n                <button @click=\", \">\\u274C</button>\\n            </li>\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_LitElement) {\n  _inherits(TodoItem, _LitElement);\n\n  _createClass(TodoItem, null, [{\n    key: \"properties\",\n    get: function get() {\n      return {\n        text: {\n          type: String,\n          reflect: true\n        },\n        checked: {\n          type: Boolean,\n          reflect: true\n        },\n        index: {\n          type: Number\n        }\n      };\n    }\n  }]);\n\n  function TodoItem() {\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoItem).call(this)); // set some default values\n\n    _this.text = '';\n    _this.checked = false;\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"_fire\",\n    value: function _fire(eventType) {\n      this.dispatchEvent(new CustomEvent(eventType, {\n        detail: this.index\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), this.checked, function () {\n        return _this2._fire('onToggle');\n      }, this.checked ? 'completed' : '', this.text, function () {\n        return _this2._fire('onRemove');\n      });\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(_templateObject2());\n    }\n  }]);\n\n  return TodoItem;\n}(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"]);\n\nwindow.customElements.define('to-do-item', TodoItem);\n\n//# sourceURL=webpack:///./src/components/to-do-item.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_to_do_app_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/to-do-app.js */ \"./src/components/to-do-app.js\");\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });